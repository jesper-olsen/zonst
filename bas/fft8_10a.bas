10 REM *** (FFT8.10A) FFT/INV FFT (CORRECTED & IMPLEMENTED) ***
12 PRINT "INPUT NUMBER OF DATA POINTS AS 2^N"
14 INPUT "N = ";N
16 Q=2^N
20 Q2=Q/2:Q3=Q2-1:Q4=Q/4:Q5=Q4-1:Q8=Q/8
22 DIM C(2,Q),S(2,Q),KC(Q),KS(Q)
30 PI=3.141592653589793#:P2=2*PI:K1=P2/Q
32 FOR I=0 TO Q:KC(I)=COS(K1*I):KS(I)=SIN(K1*I):NEXT
40 CLS
50 PRINT SPC(30);"MAIN MENU":PRINT:PRINT
60 PRINT SPC(5);"1 = ANALYZE Q/2 COMPONENT TRIANGLE (FORWARD FFT)"
62 PRINT SPC(5);"2 = INVERSE TRANSFORM CURRENT DATA"
64 PRINT SPC(5);"3 = EXIT":PRINT
70 PRINT SPC(10);"MAKE SELECTION :";
80 A$=INKEY$:IF A$="" THEN 80
90 A=VAL(A$):ON A GOSUB 600,700,990
95 GOTO 50
100 REM *** FFT/IFFT ROUTINE AT 181 ***
102 CLS:IF SK=1 THEN PRINT "FORWARD FFT RESULTS":PRINT
103 IF SK=-1 THEN PRINT "INVERSE FFT RESULTS":PRINT
104 PRINT "FREQ  F(COS)      F(SIN)   |   ";
105 PRINT "FREQ  F(COS)      F(SIN)":PRINT
106 T9=TIMER
181 REM *** UNIVERSAL FFT/IFFT ROUTINE ***
182 FOR M=0 TO N-1:QT=2^M:KT1=2^(N-M-1)
183 REM *** "UNIVERSAL" BUTTERFLY (MODIFIED FOR IFFT) ***
184 FOR J=0 TO Q2-1 STEP QT
185 FOR I=0 TO QT-1:KT=I*KT1
186 REM BUTTERFLY PAIRS ARE (J+I) AND (J+I+QT)
187 TEMP_C_REAL=C(T1,J+I+QT)*KC(KT)-S(T1,J+I+QT)*SK*KS(KT) :REM *** IFFT FIX: USE SK FLAG ***
188 TEMP_C_IMAG=S(T1,J+I+QT)*KC(KT)+C(T1,J+I+QT)*SK*KS(KT) :REM *** IFFT FIX: USE SK FLAG ***
189 REM --- FIRST HALF OF BUTTERFLY ---
190 C(T0,J+I)=(C(T1,J+I)+TEMP_C_REAL)/N0 :REM *** IFFT FIX: USE N0 FOR NORMALIZATION ***
191 S(T0,J+I)=(S(T1,J+I)+TEMP_C_IMAG)/N0 :REM *** IFFT FIX: USE N0 FOR NORMALIZATION ***
192 REM --- SECOND HALF OF BUTTERFLY ---
193 C(T0,J+I+QT)=(C(T1,J+I)-TEMP_C_REAL)/N0 :REM *** IFFT FIX: USE N0 FOR NORMALIZATION ***
194 S(T0,J+I+QT)=(S(T1,J+I)-TEMP_C_IMAG)/N0 :REM *** IFFT FIX: USE N0 FOR NORMALIZATION ***
195 NEXT I
196 NEXT J
197 REM --- SWAP BUFFERS (PING-PONG) ---
198 IF T0=0 THEN T0=1:T1=0:GOTO 199.2
199 T0=0:T1=1
199.2 NEXT M
200 T9=TIMER-T9
210 FOR Z=0 TO Q2-1
215 GOSUB 300
220 NEXT Z
222 PRINT:PRINT "TIME =";T9
225 PRINT:PRINT:INPUT "C/R TO CONTINUE:";A$
230 RETURN
300 PRINT USING "###";Z;:PRINT "  ";
310 PRINT USING "+##.#####";C(T1,Z);:PRINT "  ";
312 PRINT USING "+##.#####";S(T1,Z);:PRINT " | ";
320 PRINT USING "###";Z+Q2;:PRINT "  ";
322 PRINT USING "+##.#####";C(T1,Z+Q2);:PRINT "  ";
324 PRINT USING "+##.#####";S(T1,Z+Q2)
330 RETURN
400 REM GENERATE Q/2 COMPONENT TRIANGLE
410 FOR I=0 TO Q-1:C(0,I)=0:S(0,I)=0
420 FOR J=1 TO Q/2 STEP 2: C(0,I)=C(0,I)+COS(K1*J*I)/(J*J):NEXT
430 NEXT
440 RETURN
600 REM * FORWARD FFT OF TRIANGLE WAVE *
602 CLS:PRINT:PRINT
604 PRINT "PREPARING TRIANGLE WAVE DATA - PLEASE WAIT!"
610 GOSUB 400
612 T0=1:T1=0
613 SK=1:N0=2 :REM *** SETUP FOR FORWARD FFT ***
614 PRINT:INPUT "DATA READY - C/R TO CONTINUE";A$
620 GOSUB 181
630 RETURN
700 REM *** INVERSE FFT OF CURRENT DATA (IMPLEMENTED) ***
710 PRINT "PREPARING TO INVERSE TRANSFORM CURRENT DATA..."
712 REM The data from the last transform is already in buffers C(T1,...) and S(T1,...)
714 SK=-1:N0=1 :REM *** SETUP FOR INVERSE FFT ***
716 GOSUB 181 :REM *** CALL THE SAME ROUTINE WITH NEW FLAGS ***
730 RETURN
990 STOP
